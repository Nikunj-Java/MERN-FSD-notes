********************************************************************************
COllection Iterators
********************************************************************************


1. Genrator:

        ---> special function which can be  paused and again resumed
        ---> for creating same we will  use simple function systax
        ---> for pause we will use 'Yeild' key word
2. Iterators:
        --->Objects implemented using Iterator protocol(interface)
        --->it provides standard way to iterate over arrays ,string, maps,sets...

*********************************************************************************
OOPS principles
*********************************************************************************
class and Objects
- when we create an object its small part which can have the access of all the class functionality


1. Encapsulation: wrapping the data to secure it.

2. Polymorphism: 'poly' means many ,'morph' means various forms

    A. Method Overriding
    ------------------------
    > when child class is extending a prent class means a child can access all the properties of parent class
    > bu child can also implement its own similar functionality and use it by overriding parent method.
    
    B. Method Overloading
    ------------------------
    > same functiona name and call it with different paramenters or different types (Multiple Behaviour) 
    
 